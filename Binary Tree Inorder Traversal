/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
//     public List<Integer> inorderTraversal(TreeNode root) {
//     ArrayList<Integer> res = new ArrayList<Integer>();
//         adding(root,res);
//         return res;
//     }
//     public void adding(TreeNode root,ArrayList<Integer> res){
//         if (root==null){
//             return;
//         }
//         adding(root.left,res);
//         res.add(root.val);
//         adding(root.right,res);
        
        
//     }
    public List<Integer> inorderTraversal(TreeNode root) {
        List<Integer> list=new LinkedList<Integer>();
        Stack<TreeNode> stack=new Stack<>();
        TreeNode temp=root;
        while(temp!=null || !stack.isEmpty()){
            
        while(temp!=null){
            stack.push(temp);
            temp=temp.left;
        }
            temp=stack.pop();
            list.add(temp.val);
            temp=temp.right;
        }
            return list;
    }
}
